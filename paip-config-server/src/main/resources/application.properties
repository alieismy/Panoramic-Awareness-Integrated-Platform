########################## application级别通用配置 ##########################
##### loadbalancer配置
## 切换实例的重试
spring.cloud.loadbalancer.retry.enabled=false

##### feign配置
feign.sentinel.enabled=true
feign.hystrix.enabled=false
feign.okhttp.enabled=true
feign.httpclient.enabled=false
feign.httpclient.max-connections=1000
feign.httpclient.max-connections-per-route=100
feign.client.config.default.connectTimeout=30000
feign.client.config.default.readTimeout=30000
feign.client.config.serviceA.connectTimeout=30000
feign.client.config.serviceA.readTimeout=30000
## 开启Feign请求响应压缩
feign.compression.request.enabled=true
feign.compression.response.enabled=true
## 配置压缩文档类型及最小压缩的文档大小, 默认2048, 即是2k
feign.compression.request.min-request-size=2048
feign.compression.request.mime-types=text/xml,application/xml,application/json


##### sentinel配置
spring.cloud.sentinel.transport.dashboard=${paip.sentinel.dashboard}
# false: 懒加载Sentinel Dashboard菜单
spring.cloud.sentinel.eager=true


##### druid配置
#连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
spring.datasource.druid.initial-size=10
spring.datasource.druid.max-active=128
spring.datasource.druid.min-idle=10
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# Oracle请使用SELECT 1 FROM DUAL
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# 性能优化:1.配置了maxWait之后，缺省启用公平锁 2.keepAlive在 druid 1.0.28 后新增，默认值是 false，即不对空闲连接保活
spring.datasource.druid.use-unfair-lock=true
spring.datasource.druid.keep-alive=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒，默认60000，设置5分钟
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒，默认300000，设置30分钟
spring.datasource.druid.min-evictable-idle-time-millis=300000
#
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
# 这些Filter都是默认配置。如果默认配置不能满足你的需求，你可以通过配置文件来配置Filter
spring.datasource.druid.filters=stat,wall,slf4j
# 启用ConfigFilter
spring.datasource.druid.filter.config.enabled=true
#
# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.config.comment-allow=true
#
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions="*.js, *.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.profile-enable=true
spring.datasource.druid.web-stat-filter.session-stat-enable=false
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
#根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#不允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=Abcd123456
# spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
# spring.datasource.druid.stat-view-servlet.deny=


##### mybatis-plus配置
#字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
mybatis-plus.global-config.db-config.field-strategy=NOT_NULL
#逻辑删除配置
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0
# 原生配置
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false


##### redis配置
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=128
# 连接池中的最大空闲连接, 默认 8
spring.redis.lettuce.pool.max-idle=128
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=3000
# 连接池中的最小空闲连接, 默认 0
spring.redis.lettuce.pool.min-idle=10
# 空闲链接检测线程检测周期。如果为负值，表示不运行检测线程。（单位：毫秒）
spring.redis.lettuce.pool.time-between-eviction-runs=300000
#spring.redis.lettuce.shutdown-timeout=100 #100ms


##### EMBEDDED SERVER CONFIGURATION (ServerProperties)
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程，不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.threads.io=16
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载，默认值是IO线程数*8
server.undertow.threads.worker=1024
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用
server.undertow.buffer-size=1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true


##### logging配置
logging.level.com.alibaba.nacos.client.naming=warn